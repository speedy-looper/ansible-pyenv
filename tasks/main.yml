---
- name: install required libs for build python
  become: yes
  apt: name={{ item }} update_cache=yes
  with_items:
    - build-essential
    - libreadline-gplv2-dev
    - libncursesw5-dev
    - libssl-dev
    - libsqlite3-dev
    - tk-dev
    - libgdbm-dev
    - libc6-dev
    - libbz2-dev

- name: ensure bash_profile
  file:
    path=~/.bash_profile
    state=touch
  changed_when: False
  always_run: yes

- name: check if pyenv in PATH
  shell: . ~/.bash_profile && echo $PATH
  args:
    executable: /bin/bash
  register: paths
  changed_when: False
  always_run: yes

- shell: whoami
  register: debuginfo

- debug: var={{ debuginfo }}

- name: download pyenv-install.sh
  get_url:
    url=https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer
    dest=/home/{{python.user}}/pyenv.sh
    mode=0744
  when: "'pyenv' not in paths.stdout"

- name: run the installer
  command: /home/{{python.user}}/pyenv.sh
  when: "'pyenv' not in paths.stdout"

- name: update PATH
  lineinfile:
    dest=~/.bash_profile
    line='export PATH="$HOME/.pyenv/bin:$PATH"'

- name: init pyenv with bash
  lineinfile:
    dest=~/.bash_profile
    line='eval "$(pyenv init -)"'

- name: pyenv update
  shell: . ~/.bash_profile && pyenv update
  when: "'pyenv' not in paths.stdout"

- name: check python versions
  shell: . ~/.bash_profile && pyenv versions | grep {{ item }}
  with_items: python.versions
  register: versions_available
  ignore_errors: yes
  changed_when: False
  always_run: yes

- name: install python versions
  shell: . ~/.bash_profile && pyenv install {{ item.item }}
  with_items: versions_available.results
  when: "{{ item.rc == 1 }}"

- name: set global python
  shell: . ~/.bash_profile && pyenv global {{ python.default }}
  changed_when: False
  always_run: yes

- name: rehash
  shell: . ~/.bash_profile && pyenv rehash
  changed_when: False
  always_run: yes
